/////////////////////////////////////////////////////////////
// Created by: Synopsys DC Expert(TM) in wire load mode
// Version   : S-2021.06
// Date      : Mon Apr 25 18:01:16 2022
/////////////////////////////////////////////////////////////


module cadence_filt_DW01_inc_0 ( A, SUM );
  input [15:0] A;
  output [15:0] SUM;

  wire   [15:2] carry;

  HADDX1_LVT U1_1_14 ( .A0(A[14]), .B0(carry[14]), .C1(carry[15]), .SO(SUM[14]) );
  HADDX1_LVT U1_1_13 ( .A0(A[13]), .B0(carry[13]), .C1(carry[14]), .SO(SUM[13]) );
  HADDX1_LVT U1_1_12 ( .A0(A[12]), .B0(carry[12]), .C1(carry[13]), .SO(SUM[12]) );
  HADDX1_LVT U1_1_11 ( .A0(A[11]), .B0(carry[11]), .C1(carry[12]), .SO(SUM[11]) );
  HADDX1_LVT U1_1_10 ( .A0(A[10]), .B0(carry[10]), .C1(carry[11]), .SO(SUM[10]) );
  HADDX1_LVT U1_1_9 ( .A0(A[9]), .B0(carry[9]), .C1(carry[10]), .SO(SUM[9]) );
  HADDX1_LVT U1_1_8 ( .A0(A[8]), .B0(carry[8]), .C1(carry[9]), .SO(SUM[8]) );
  HADDX1_LVT U1_1_7 ( .A0(A[7]), .B0(carry[7]), .C1(carry[8]), .SO(SUM[7]) );
  HADDX1_LVT U1_1_6 ( .A0(A[6]), .B0(carry[6]), .C1(carry[7]), .SO(SUM[6]) );
  HADDX1_LVT U1_1_5 ( .A0(A[5]), .B0(carry[5]), .C1(carry[6]), .SO(SUM[5]) );
  HADDX1_LVT U1_1_4 ( .A0(A[4]), .B0(carry[4]), .C1(carry[5]), .SO(SUM[4]) );
  HADDX1_LVT U1_1_3 ( .A0(A[3]), .B0(carry[3]), .C1(carry[4]), .SO(SUM[3]) );
  HADDX1_LVT U1_1_2 ( .A0(A[2]), .B0(carry[2]), .C1(carry[3]), .SO(SUM[2]) );
  HADDX1_LVT U1_1_1 ( .A0(A[1]), .B0(A[0]), .C1(carry[2]), .SO(SUM[1]) );
  XOR2X1_LVT U1 ( .A1(carry[15]), .A2(A[15]), .Y(SUM[15]) );
  INVX0_LVT U2 ( .A(A[0]), .Y(SUM[0]) );
endmodule


module cadence_filt ( clk, rst_n, cadence, cadence_filt, cadence_rise );
  input clk, rst_n, cadence;
  output cadence_filt, cadence_rise;
  wire   cadence_ff1, cadence_ff2, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10,
         N11, N12, N13, N14, N15, N16, N17, N18, N19, N20, N21, N22, N23, N24,
         N25, N26, N27, N28, N29, N30, N31, N32, n2, n4, n5, n6, n7, n8, n9,
         n10, n11, n12, n13, n14, n15, n16, n17, n18;
  wire   [15:0] stbl_cnt;

  DFFARX1_LVT cadence_ff1_reg ( .D(cadence), .CLK(clk), .RSTB(rst_n), .Q(
        cadence_ff1) );
  DFFARX1_LVT cadence_ff2_reg ( .D(n15), .CLK(clk), .RSTB(rst_n), .Q(
        cadence_ff2), .QN(n11) );
  DFFARX1_LVT cadence_stable_reg ( .D(n13), .CLK(clk), .RSTB(rst_n), .Q(n17), 
        .QN(n9) );
  DFFARX1_LVT \stbl_cnt_reg[0]  ( .D(N32), .CLK(clk), .RSTB(rst_n), .Q(
        stbl_cnt[0]) );
  DFFARX1_LVT \stbl_cnt_reg[1]  ( .D(N31), .CLK(clk), .RSTB(rst_n), .Q(
        stbl_cnt[1]) );
  DFFARX1_LVT \stbl_cnt_reg[2]  ( .D(N30), .CLK(clk), .RSTB(rst_n), .Q(
        stbl_cnt[2]) );
  DFFARX1_LVT \stbl_cnt_reg[3]  ( .D(N29), .CLK(clk), .RSTB(rst_n), .Q(
        stbl_cnt[3]) );
  DFFARX1_LVT \stbl_cnt_reg[4]  ( .D(N28), .CLK(clk), .RSTB(rst_n), .Q(
        stbl_cnt[4]) );
  DFFARX1_LVT \stbl_cnt_reg[5]  ( .D(N27), .CLK(clk), .RSTB(rst_n), .Q(
        stbl_cnt[5]) );
  DFFARX1_LVT \stbl_cnt_reg[6]  ( .D(N26), .CLK(clk), .RSTB(rst_n), .Q(
        stbl_cnt[6]) );
  DFFARX1_LVT \stbl_cnt_reg[7]  ( .D(N25), .CLK(clk), .RSTB(rst_n), .Q(
        stbl_cnt[7]) );
  DFFARX1_LVT \stbl_cnt_reg[8]  ( .D(N24), .CLK(clk), .RSTB(rst_n), .Q(
        stbl_cnt[8]) );
  DFFARX1_LVT \stbl_cnt_reg[9]  ( .D(N23), .CLK(clk), .RSTB(rst_n), .Q(
        stbl_cnt[9]) );
  DFFARX1_LVT \stbl_cnt_reg[10]  ( .D(N22), .CLK(clk), .RSTB(rst_n), .Q(
        stbl_cnt[10]) );
  DFFARX1_LVT \stbl_cnt_reg[11]  ( .D(N21), .CLK(clk), .RSTB(rst_n), .Q(
        stbl_cnt[11]) );
  DFFARX1_LVT \stbl_cnt_reg[12]  ( .D(N20), .CLK(clk), .RSTB(rst_n), .Q(
        stbl_cnt[12]) );
  DFFARX1_LVT \stbl_cnt_reg[13]  ( .D(N19), .CLK(clk), .RSTB(rst_n), .Q(
        stbl_cnt[13]) );
  DFFARX1_LVT \stbl_cnt_reg[14]  ( .D(N18), .CLK(clk), .RSTB(rst_n), .Q(
        stbl_cnt[14]) );
  DFFARX1_LVT \stbl_cnt_reg[15]  ( .D(N17), .CLK(clk), .RSTB(rst_n), .Q(
        stbl_cnt[15]) );
  DFFARX1_LVT cadence_filt_reg ( .D(n12), .CLK(clk), .RSTB(rst_n), .Q(
        cadence_filt) );
  AO22X1_LVT U3 ( .A1(n18), .A2(cadence_filt), .A3(n2), .A4(n17), .Y(n10) );
  NAND4X0_LVT U6 ( .A1(stbl_cnt[1]), .A2(stbl_cnt[15]), .A3(stbl_cnt[14]), 
        .A4(stbl_cnt[13]), .Y(n7) );
  NAND4X0_LVT U7 ( .A1(stbl_cnt[12]), .A2(stbl_cnt[11]), .A3(stbl_cnt[10]), 
        .A4(stbl_cnt[0]), .Y(n6) );
  NAND4X0_LVT U8 ( .A1(stbl_cnt[9]), .A2(stbl_cnt[8]), .A3(stbl_cnt[7]), .A4(
        stbl_cnt[6]), .Y(n5) );
  NAND4X0_LVT U9 ( .A1(stbl_cnt[5]), .A2(stbl_cnt[4]), .A3(stbl_cnt[3]), .A4(
        stbl_cnt[2]), .Y(n4) );
  NOR2X0_LVT U10 ( .A1(n17), .A2(n11), .Y(cadence_rise) );
  AND2X1_LVT U12 ( .A1(N1), .A2(n8), .Y(N32) );
  AND2X1_LVT U13 ( .A1(N2), .A2(n8), .Y(N31) );
  AND2X1_LVT U14 ( .A1(N3), .A2(n8), .Y(N30) );
  AND2X1_LVT U15 ( .A1(N4), .A2(n8), .Y(N29) );
  AND2X1_LVT U16 ( .A1(N5), .A2(n8), .Y(N28) );
  AND2X1_LVT U17 ( .A1(N6), .A2(n8), .Y(N27) );
  AND2X1_LVT U18 ( .A1(N7), .A2(n8), .Y(N26) );
  AND2X1_LVT U19 ( .A1(N8), .A2(n8), .Y(N25) );
  AND2X1_LVT U20 ( .A1(N9), .A2(n8), .Y(N24) );
  AND2X1_LVT U21 ( .A1(N10), .A2(n8), .Y(N23) );
  AND2X1_LVT U22 ( .A1(N11), .A2(n8), .Y(N22) );
  AND2X1_LVT U23 ( .A1(N12), .A2(n8), .Y(N21) );
  AND2X1_LVT U24 ( .A1(N13), .A2(n8), .Y(N20) );
  AND2X1_LVT U25 ( .A1(N14), .A2(n8), .Y(N19) );
  AND2X1_LVT U26 ( .A1(N15), .A2(n8), .Y(N18) );
  AND2X1_LVT U27 ( .A1(N16), .A2(n8), .Y(N17) );
  NOR4X1_LVT U5 ( .A1(n4), .A2(n5), .A3(n6), .A4(n7), .Y(n2) );
  XNOR2X2_LVT U28 ( .A1(n9), .A2(n11), .Y(n8) );
  cadence_filt_DW01_inc_0 add_33 ( .A(stbl_cnt), .SUM({N16, N15, N14, N13, N12, 
        N11, N10, N9, N8, N7, N6, N5, N4, N3, N2, N1}) );
  NBUFFX2_LVT U29 ( .A(n10), .Y(n12) );
  NBUFFX2_LVT U30 ( .A(cadence_ff2), .Y(n14) );
  NBUFFX2_LVT U31 ( .A(n14), .Y(n13) );
  NBUFFX2_LVT U32 ( .A(cadence_ff1), .Y(n16) );
  NBUFFX2_LVT U33 ( .A(n16), .Y(n15) );
  INVX1_LVT U34 ( .A(n2), .Y(n18) );
endmodule

