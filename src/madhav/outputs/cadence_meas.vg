/////////////////////////////////////////////////////////////
// Created by: Synopsys DC Expert(TM) in wire load mode
// Version   : S-2021.06
// Date      : Mon Apr 25 16:05:04 2022
/////////////////////////////////////////////////////////////


module cadence_meas_DW01_inc_0 ( A, SUM );
  input [23:0] A;
  output [23:0] SUM;

  wire   [23:2] carry;

  HADDX1_LVT U1_1_22 ( .A0(A[22]), .B0(carry[22]), .C1(carry[23]), .SO(SUM[22]) );
  HADDX1_LVT U1_1_21 ( .A0(A[21]), .B0(carry[21]), .C1(carry[22]), .SO(SUM[21]) );
  HADDX1_LVT U1_1_20 ( .A0(A[20]), .B0(carry[20]), .C1(carry[21]), .SO(SUM[20]) );
  HADDX1_LVT U1_1_19 ( .A0(A[19]), .B0(carry[19]), .C1(carry[20]), .SO(SUM[19]) );
  HADDX1_LVT U1_1_18 ( .A0(A[18]), .B0(carry[18]), .C1(carry[19]), .SO(SUM[18]) );
  HADDX1_LVT U1_1_17 ( .A0(A[17]), .B0(carry[17]), .C1(carry[18]), .SO(SUM[17]) );
  HADDX1_LVT U1_1_16 ( .A0(A[16]), .B0(carry[16]), .C1(carry[17]), .SO(SUM[16]) );
  HADDX1_LVT U1_1_15 ( .A0(A[15]), .B0(carry[15]), .C1(carry[16]), .SO(SUM[15]) );
  HADDX1_LVT U1_1_14 ( .A0(A[14]), .B0(carry[14]), .C1(carry[15]), .SO(SUM[14]) );
  HADDX1_LVT U1_1_13 ( .A0(A[13]), .B0(carry[13]), .C1(carry[14]), .SO(SUM[13]) );
  HADDX1_LVT U1_1_12 ( .A0(A[12]), .B0(carry[12]), .C1(carry[13]), .SO(SUM[12]) );
  HADDX1_LVT U1_1_11 ( .A0(A[11]), .B0(carry[11]), .C1(carry[12]), .SO(SUM[11]) );
  HADDX1_LVT U1_1_10 ( .A0(A[10]), .B0(carry[10]), .C1(carry[11]), .SO(SUM[10]) );
  HADDX1_LVT U1_1_9 ( .A0(A[9]), .B0(carry[9]), .C1(carry[10]), .SO(SUM[9]) );
  HADDX1_LVT U1_1_8 ( .A0(A[8]), .B0(carry[8]), .C1(carry[9]), .SO(SUM[8]) );
  HADDX1_LVT U1_1_7 ( .A0(A[7]), .B0(carry[7]), .C1(carry[8]), .SO(SUM[7]) );
  HADDX1_LVT U1_1_6 ( .A0(A[6]), .B0(carry[6]), .C1(carry[7]), .SO(SUM[6]) );
  HADDX1_LVT U1_1_5 ( .A0(A[5]), .B0(carry[5]), .C1(carry[6]), .SO(SUM[5]) );
  HADDX1_LVT U1_1_4 ( .A0(A[4]), .B0(carry[4]), .C1(carry[5]), .SO(SUM[4]) );
  HADDX1_LVT U1_1_3 ( .A0(A[3]), .B0(carry[3]), .C1(carry[4]), .SO(SUM[3]) );
  HADDX1_LVT U1_1_2 ( .A0(A[2]), .B0(carry[2]), .C1(carry[3]), .SO(SUM[2]) );
  HADDX1_LVT U1_1_1 ( .A0(A[1]), .B0(A[0]), .C1(carry[2]), .SO(SUM[1]) );
  XOR2X1_LVT U1 ( .A1(carry[23]), .A2(A[23]), .Y(SUM[23]) );
  INVX0_LVT U2 ( .A(A[0]), .Y(SUM[0]) );
endmodule


module cadence_meas ( clk, rst_n, cadence_filt, cadence_rise, not_pedaling, 
        cadence_per );
  output [7:0] cadence_per;
  input clk, rst_n, cadence_filt, cadence_rise;
  output not_pedaling;
  wire   N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17, N18, N19, N20,
         N21, N22, N23, N24, N25, N26, N27, N28, N29, N30, N72, n3, n6, n7, n8,
         n9, n10, n11, n12, n13, n14, n15, n16, n17, n18, n21, n22, n23, n24,
         n25, n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38,
         n39, n40, n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52,
         n53, n54, n55, n56, n57, n58, n59, n60, n61;
  wire   [23:0] cadence_count;
  assign not_pedaling = N72;

  DFFARX1_LVT \cadence_count_reg[0]  ( .D(n52), .CLK(clk), .RSTB(rst_n), .Q(
        cadence_count[0]) );
  DFFARX1_LVT \cadence_count_reg[14]  ( .D(n37), .CLK(clk), .RSTB(rst_n), .Q(
        cadence_count[14]) );
  DFFARX1_LVT \cadence_count_reg[1]  ( .D(n50), .CLK(clk), .RSTB(rst_n), .Q(
        cadence_count[1]) );
  DFFARX1_LVT \cadence_count_reg[2]  ( .D(n49), .CLK(clk), .RSTB(rst_n), .Q(
        cadence_count[2]) );
  DFFARX1_LVT \cadence_count_reg[3]  ( .D(n48), .CLK(clk), .RSTB(n57), .Q(
        cadence_count[3]) );
  DFFARX1_LVT \cadence_count_reg[4]  ( .D(n47), .CLK(clk), .RSTB(n57), .Q(
        cadence_count[4]) );
  DFFARX1_LVT \cadence_count_reg[5]  ( .D(n46), .CLK(clk), .RSTB(n57), .Q(
        cadence_count[5]) );
  DFFARX1_LVT \cadence_count_reg[6]  ( .D(n45), .CLK(clk), .RSTB(rst_n), .Q(
        cadence_count[6]) );
  DFFARX1_LVT \cadence_count_reg[7]  ( .D(n44), .CLK(clk), .RSTB(rst_n), .Q(
        cadence_count[7]) );
  DFFARX1_LVT \cadence_count_reg[8]  ( .D(n43), .CLK(clk), .RSTB(rst_n), .Q(
        cadence_count[8]) );
  DFFARX1_LVT \cadence_count_reg[9]  ( .D(n42), .CLK(clk), .RSTB(rst_n), .Q(
        cadence_count[9]) );
  DFFARX1_LVT \cadence_count_reg[10]  ( .D(n41), .CLK(clk), .RSTB(n57), .Q(
        cadence_count[10]), .QN(n3) );
  DFFARX1_LVT \cadence_count_reg[11]  ( .D(n40), .CLK(clk), .RSTB(n57), .Q(
        cadence_count[11]) );
  DFFARX1_LVT \cadence_count_reg[12]  ( .D(n39), .CLK(clk), .RSTB(n57), .Q(
        cadence_count[12]) );
  DFFARX1_LVT \cadence_count_reg[13]  ( .D(n38), .CLK(clk), .RSTB(n57), .Q(
        cadence_count[13]) );
  DFFARX1_LVT \cadence_count_reg[15]  ( .D(n36), .CLK(clk), .RSTB(n57), .Q(
        cadence_count[15]) );
  DFFARX1_LVT \cadence_count_reg[16]  ( .D(n35), .CLK(clk), .RSTB(n57), .Q(
        cadence_count[16]) );
  DFFARX1_LVT \cadence_count_reg[17]  ( .D(n34), .CLK(clk), .RSTB(n57), .Q(
        cadence_count[17]) );
  DFFARX1_LVT \cadence_count_reg[18]  ( .D(n33), .CLK(clk), .RSTB(n57), .Q(
        cadence_count[18]) );
  DFFARX1_LVT \cadence_count_reg[19]  ( .D(n32), .CLK(clk), .RSTB(n57), .Q(
        cadence_count[19]) );
  DFFARX1_LVT \cadence_count_reg[20]  ( .D(n31), .CLK(clk), .RSTB(n57), .Q(
        cadence_count[20]) );
  DFFARX1_LVT \cadence_count_reg[21]  ( .D(n30), .CLK(clk), .RSTB(n57), .Q(
        cadence_count[21]) );
  DFFARX1_LVT \cadence_count_reg[22]  ( .D(n51), .CLK(clk), .RSTB(n57), .Q(
        cadence_count[22]) );
  DFFARX1_LVT \cadence_count_reg[23]  ( .D(n29), .CLK(clk), .RSTB(rst_n), .Q(
        cadence_count[23]) );
  DFFX1_LVT \cadence_per_reg[7]  ( .D(n28), .CLK(clk), .Q(cadence_per[7]) );
  DFFX1_LVT \cadence_per_reg[6]  ( .D(n27), .CLK(clk), .Q(cadence_per[6]) );
  DFFX1_LVT \cadence_per_reg[5]  ( .D(n26), .CLK(clk), .Q(cadence_per[5]) );
  DFFX1_LVT \cadence_per_reg[4]  ( .D(n25), .CLK(clk), .Q(cadence_per[4]) );
  DFFX1_LVT \cadence_per_reg[3]  ( .D(n24), .CLK(clk), .Q(cadence_per[3]) );
  DFFX1_LVT \cadence_per_reg[2]  ( .D(n23), .CLK(clk), .Q(cadence_per[2]) );
  DFFX1_LVT \cadence_per_reg[1]  ( .D(n22), .CLK(clk), .Q(cadence_per[1]) );
  DFFX1_LVT \cadence_per_reg[0]  ( .D(n21), .CLK(clk), .Q(cadence_per[0]) );
  NOR4X1_LVT U3 ( .A1(n15), .A2(cadence_count[22]), .A3(cadence_count[2]), 
        .A4(cadence_count[23]), .Y(n14) );
  NOR4X1_LVT U4 ( .A1(n16), .A2(cadence_count[17]), .A3(cadence_count[19]), 
        .A4(cadence_count[18]), .Y(n13) );
  NOR4X1_LVT U5 ( .A1(n17), .A2(cadence_count[11]), .A3(cadence_count[16]), 
        .A4(cadence_count[15]), .Y(n12) );
  AO22X1_LVT U11 ( .A1(cadence_per[0]), .A2(n59), .A3(cadence_count[7]), .A4(
        n6), .Y(n21) );
  AO22X1_LVT U12 ( .A1(cadence_per[1]), .A2(n59), .A3(cadence_count[8]), .A4(
        n6), .Y(n22) );
  AO221X1_LVT U13 ( .A1(cadence_per[2]), .A2(n59), .A3(cadence_count[9]), .A4(
        n7), .A5(n58), .Y(n23) );
  AO22X1_LVT U14 ( .A1(cadence_per[3]), .A2(n59), .A3(cadence_count[10]), .A4(
        n6), .Y(n24) );
  AO22X1_LVT U15 ( .A1(cadence_per[4]), .A2(n59), .A3(cadence_count[11]), .A4(
        n6), .Y(n25) );
  AND2X1_LVT U16 ( .A1(n7), .A2(rst_n), .Y(n6) );
  AO221X1_LVT U17 ( .A1(cadence_per[5]), .A2(n59), .A3(cadence_count[12]), 
        .A4(n7), .A5(n58), .Y(n26) );
  AO221X1_LVT U18 ( .A1(cadence_per[6]), .A2(n59), .A3(cadence_count[13]), 
        .A4(n7), .A5(n58), .Y(n27) );
  AO221X1_LVT U19 ( .A1(cadence_per[7]), .A2(n59), .A3(cadence_count[14]), 
        .A4(n7), .A5(n58), .Y(n28) );
  NAND3X0_LVT U20 ( .A1(rst_n), .A2(n60), .A3(n8), .Y(n7) );
  AND2X1_LVT U21 ( .A1(N30), .A2(n55), .Y(n29) );
  AND2X1_LVT U22 ( .A1(N28), .A2(n9), .Y(n30) );
  AND2X1_LVT U23 ( .A1(N27), .A2(n9), .Y(n31) );
  AND2X1_LVT U24 ( .A1(N26), .A2(n9), .Y(n32) );
  AND2X1_LVT U25 ( .A1(N25), .A2(n9), .Y(n33) );
  AND2X1_LVT U26 ( .A1(N24), .A2(n9), .Y(n34) );
  AND2X1_LVT U27 ( .A1(N23), .A2(n9), .Y(n35) );
  AND2X1_LVT U28 ( .A1(N22), .A2(n9), .Y(n36) );
  AO21X1_LVT U29 ( .A1(N21), .A2(n55), .A3(n61), .Y(n37) );
  AO21X1_LVT U30 ( .A1(N20), .A2(n55), .A3(n61), .Y(n38) );
  AO21X1_LVT U31 ( .A1(N19), .A2(n55), .A3(n61), .Y(n39) );
  AND2X1_LVT U32 ( .A1(N18), .A2(n9), .Y(n40) );
  AND2X1_LVT U33 ( .A1(N17), .A2(n9), .Y(n41) );
  AO21X1_LVT U34 ( .A1(N16), .A2(n55), .A3(n61), .Y(n42) );
  AND2X1_LVT U35 ( .A1(N15), .A2(n9), .Y(n43) );
  AND2X1_LVT U36 ( .A1(N14), .A2(n9), .Y(n44) );
  AO21X1_LVT U37 ( .A1(N13), .A2(n55), .A3(n61), .Y(n45) );
  AO21X1_LVT U38 ( .A1(N12), .A2(n55), .A3(n61), .Y(n46) );
  AO21X1_LVT U39 ( .A1(N11), .A2(n55), .A3(n61), .Y(n47) );
  AND2X1_LVT U40 ( .A1(N10), .A2(n55), .Y(n48) );
  AND2X1_LVT U41 ( .A1(N9), .A2(n55), .Y(n49) );
  AND2X1_LVT U42 ( .A1(N8), .A2(n55), .Y(n50) );
  AND2X1_LVT U43 ( .A1(N29), .A2(n55), .Y(n51) );
  AO21X1_LVT U44 ( .A1(N7), .A2(n55), .A3(n61), .Y(n52) );
  AND2X1_LVT U45 ( .A1(n10), .A2(n60), .Y(n9) );
  OR2X1_LVT U46 ( .A1(n8), .A2(cadence_rise), .Y(n10) );
  NAND4X0_LVT U47 ( .A1(n11), .A2(n12), .A3(n13), .A4(n14), .Y(n8) );
  OR3X1_LVT U48 ( .A1(cadence_count[8]), .A2(cadence_count[7]), .A3(
        cadence_count[3]), .Y(n15) );
  OR3X1_LVT U49 ( .A1(cadence_count[21]), .A2(cadence_count[20]), .A3(
        cadence_count[1]), .Y(n16) );
  NAND3X0_LVT U50 ( .A1(cadence_count[0]), .A2(n3), .A3(cadence_count[12]), 
        .Y(n17) );
  AND4X1_LVT U51 ( .A1(cadence_count[6]), .A2(cadence_count[5]), .A3(
        cadence_count[9]), .A4(n18), .Y(n11) );
  AND3X1_LVT U52 ( .A1(cadence_count[14]), .A2(cadence_count[13]), .A3(
        cadence_count[4]), .Y(n18) );
  cadence_meas_DW01_inc_0 add_36 ( .A(cadence_count), .SUM({N30, N29, N28, N27, 
        N26, N25, N24, N23, N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, 
        N12, N11, N10, N9, N8, N7}) );
  INVX1_LVT U55 ( .A(n9), .Y(n56) );
  INVX1_LVT U56 ( .A(rst_n), .Y(n58) );
  INVX1_LVT U57 ( .A(n56), .Y(n55) );
  INVX1_LVT U58 ( .A(n7), .Y(n59) );
  INVX1_LVT U59 ( .A(n10), .Y(n61) );
  INVX1_LVT U60 ( .A(cadence_rise), .Y(n60) );
  AND2X1_LVT U61 ( .A1(n53), .A2(n54), .Y(N72) );
  NOR4X1_LVT U62 ( .A1(cadence_per[0]), .A2(cadence_per[1]), .A3(
        cadence_per[3]), .A4(cadence_per[4]), .Y(n53) );
  AND4X1_LVT U63 ( .A1(cadence_per[7]), .A2(cadence_per[6]), .A3(
        cadence_per[5]), .A4(cadence_per[2]), .Y(n54) );
  INVX2_LVT U64 ( .A(n58), .Y(n57) );
endmodule

